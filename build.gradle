plugins {
//	id 'org.liquibase.gradle' version '2.0.2'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

apply plugin: 'eclipse'
apply plugin: 'maven'

group = appGroup
version = appVersion
sourceCompatibility = 1.8
//apply plugin: 'org.liquibase.gradle'


springBoot {
//     This statement tells the Gradle Spring Boot plugin
//     to generate a file
//     build/resources/main/META-INF/build-info.properties
//     that is picked up by Spring Boot to display
//     via /info endpoint.
    buildInfo()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.projectlombok:lombok:1.18.2')
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.oracle.ojdbc:ojdbc8:19.3.0.0'
    implementation 'org.liquibase:liquibase-core:3.8.4'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile 'junit:junit:4.12'
    testCompile('com.github.tomakehurst:wiremock:2.16.0')
    testCompile('com.github.tomakehurst:wiremock-standalone:2.16.0')
}

test {
    useJUnitPlatform()
}